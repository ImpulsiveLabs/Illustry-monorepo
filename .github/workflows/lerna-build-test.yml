name: Lerna Monorepo Build, Test, and Dependabot

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Build Monorepo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn/cache
            .yarnrc.yml
            yarn.lock
          key: ${{ runner.os }}-yarn-${{ hashFiles('.yarnrc.yml', 'yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build TypeScript
        run: yarn build:ts

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    services:
      mongodb:
        image: mongo:4.4.6
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
          MONGO_INITDB_DATABASE: illustrytest
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn/cache
            .yarnrc.yml
            yarn.lock
          key: ${{ runner.os }}-yarn-${{ hashFiles('.yarnrc.yml', 'yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run Tests
        run: yarn test
