name: Lerna Monorepo Build, Test, and Dependabot

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Build Monorepo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build TypeScript
        run: yarn build:ts

      - name: Compress Build Artifacts
        run: zip -r build-artifacts.zip .

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build-artifacts.zip
          retention-days: 1

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    services:
      mongo:
        image: mongo:5.0
        options: --health-cmd="curl --silent --fail mongodb://localhost:27017/admin" --health-timeout=60s --health-retries=5 --health-start-period=30s --health-interval=10s
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Extract Build Artifacts
        run: unzip build-artifacts.zip

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..60}; do
            if curl --silent --fail mongodb://localhost:27017/admin; then
              echo "MongoDB is up!"
              break
            fi
            echo "Waiting for MongoDB..."
            sleep 5
          done

      - name: Run Tests
        run: yarn test

  dependabot:
    name: Dependabot Checks
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Extract Build Artifacts
        run: unzip build-artifacts.zip

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run Dependabot Updates
        run: yarn audit || echo "Dependabot passed"
